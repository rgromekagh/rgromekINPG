// Sortowanie Kart
//--------------------------------------------------------
// (C)2012 I LO w Tarnowie
// I Liceum Ogólnokszta³c¹ce
// im. K. Brodziñskiego
// w Tarnowie
//--------------------------------------------------------

#include <iostream>
#include <windows.h>
#include <cstdlib>
#include <time.h>

using namespace std;

// Definicje typów danych
//--------------------------------------------------------

  enum TKolor {K_PIK,K_KIER,K_KARO,K_TREFL,K_PUSTY};
  enum TFigura {F_A,F_K,F_D,F_W,F_10,F_9,F_8,F_7,F_6,F_5,F_4,F_3,F_2,F_0};
  struct TKarta
  {
    TKolor  Kolor;
    TFigura Figura;
  };
  

// Definicja operatora ++ dla typów TKolor i TFigura
//---------------------------------------------------------
inline TKolor operator++(TKolor &rs,int)
{
    return rs = (TKolor)(rs + 1);
}

inline TFigura operator++(TFigura &rs,int)
{
    return rs = (TFigura)(rs + 1);
}

// Deklaracje zmiennych globalnych
//--------------------------------------------------------

  TKarta talia[52];
  TKarta gracz[4][13];

// Definicje procedur i funkcji
//--------------------------------------------------------

// Procedura ustawia pozycjê wydruku w oknie konsoli
//--------------------------------------------------------
void gotoXY(int x, int y)
{
  COORD p;
  HANDLE h;

  h = GetStdHandle(STD_OUTPUT_HANDLE);
  p.X = x - 1; p.Y = y - 1;
  SetConsoleCursorPosition(h,p);
}

// Procedura inicjuje taliê kart
//--------------------------------------------------------
void Inicjuj_talie()
{
  int i;
  TKolor k;
  TFigura f;

  k = K_PIK; f = F_A;
  for(i = 0; i < 52; i++)
  {
    talia[i].Kolor = k; talia[i].Figura = f;
    f++;
    if(f == F_0)
    {
      k++; f = F_A;
    }
  }
}

// Procedura tasuje taliê kart
//--------------------------------------------------------
void Tasuj_talie()
{
  int i,a,b;

  for(i = 0; i < 1000; i++)
  {
    a = rand() % 52; b = rand() % 52;
    swap(talia[a], talia[b]);
  }
}

// Procedura rozdaje karty poszczególnym graczom
//--------------------------------------------------------
void Rozdaj_karty()
{
  int i,j,k;

  k = 0;
  for(i = 0; i < 4; i++)
    for(j = 0; j < 13; j++) gracz[i][j] = talia[k++];
}

// Procedura sortuje karty gracza wg kolorów i figur
//--------------------------------------------------------
void Sortuj_karty(int g)
{
  TKarta karty[4][13];
  int lfig[13], lkol[4],i,j;
  TFigura f;
  TKolor  k;

// Ustawiamy liczniki figur

  for(f = F_A; f < F_0; f++) lfig[f] = 0;

// Przegl¹damy rêkê gracza i umieszczamy kolejne karty w tablicy
// figur wg figury

  for(i = 0; i < 13; i++)
  {
     f = gracz[g][i].Figura;
     karty[lfig[f]++][f] = gracz[g][i];
  }

// Przegl¹damy tablicê figur pobieraj¹c z niej karty do rêki gracza

  i = 0;
  for(f = F_A; f < F_0; f++)
    for(j = 0; j < lfig[f]; j++) gracz[g][i++] = karty[j][f];

// Ustawiamy liczniki kolorów

  for(k = K_PIK; k < K_PUSTY; k++) lkol[k] = 0;

// Przegl¹damy rêkê gracza i umieszczamy kolejne karty w tablicy
// kolorów wg koloru karty

  for(i = 0; i < 13; i++)
  {
     k = gracz[g][i].Kolor;
     karty[k][lkol[k]++] = gracz[g][i];
  }

// Przegl¹damy tablicê kolorów pobieraj¹c z niej karty do rêki gracza

  i = 0;
  for(k = K_PIK; k < K_PUSTY; k++)
    for(j = 0; j < lkol[k]; j++) gracz[g][i++] = karty[k][j];
}

// Procedura wyœwietla karty gracza wg jego numeru:
// 1 : gracz u góry    (15,1)
// 2 : gracz po prawej (30,6)
// 3 : gracz u do³u    (15,11)
// 4 : gracz po lewej  (1,6)
// okna konsoli. Wydruk zajmuje 4 wiersze, w ka¿dym do 15 znaków.
// Figurê 10 wyœwietlamy jako T - ka¿da karta powinna zajmowaæ jeden
// znak, a zapis 10 wymaga dwóch znaków.
//--------------------------------------------------------
void Wyswietl_karty(int g)
{
  const char kolory[4]  = {6,3,4,5};
  const char * figury = "AKDWT98765432";
  const int px[4] = {15,30,15,1};
  const int py[4] = {1,6,11,6};

  int i;
  TKolor k;

  for(k = K_PIK; k < K_PUSTY; k++)
  {
    gotoXY(px[g],py[g] + k);
    cout << kolory[k] << " ";
    for(i = 0; i < 13; i++)
      if(gracz[g][i].Kolor == k) cout << figury[gracz[g][i].Figura];
  }
}

//---------------
// Program g³ówny
//---------------

int main()
{
  int i;

  srand((unsigned)time(NULL));

  Inicjuj_talie();
  Tasuj_talie();
  Rozdaj_karty();
  for(i = 0; i < 4; i++)
  {
    Sortuj_karty(i); Wyswietl_karty(i);
  }
  gotoXY(1,16);

  return 0;
} 